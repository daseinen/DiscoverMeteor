0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/nodejs', '/usr/bin/npm', 'install', '-g', 'mup' ]
2 info using npm@1.3.10
3 info using node@v0.10.25
4 verbose cache add [ 'mup', null ]
5 verbose cache add name=undefined spec="mup" args=["mup",null]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: 'mup',
6 verbose parsed url   path: 'mup',
6 verbose parsed url   href: 'mup' }
7 silly lockFile 19bdb584-mup mup
8 verbose lock mup /home/daniel/.npm/19bdb584-mup.lock
9 silly lockFile 19bdb584-mup mup
10 silly lockFile 19bdb584-mup mup
11 verbose addNamed [ 'mup', '' ]
12 verbose addNamed [ null, '*' ]
13 silly lockFile 49f77549-mup mup@
14 verbose lock mup@ /home/daniel/.npm/49f77549-mup.lock
15 silly addNameRange { name: 'mup', range: '*', hasData: false }
16 verbose url raw mup
17 verbose url resolving [ 'https://registry.npmjs.org/', './mup' ]
18 verbose url resolved https://registry.npmjs.org/mup
19 info trying registry request attempt 1 at 01:01:08
20 http GET https://registry.npmjs.org/mup
21 http 200 https://registry.npmjs.org/mup
22 silly registry.get cb [ 200,
22 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
22 silly registry.get     etag: '"CGT0JNCYF3D21IF9B6A5EJMTE"',
22 silly registry.get     'content-type': 'application/json',
22 silly registry.get     'cache-control': 'max-age=60',
22 silly registry.get     'content-length': '73215',
22 silly registry.get     'accept-ranges': 'bytes',
22 silly registry.get     date: 'Sat, 06 Jun 2015 05:01:08 GMT',
22 silly registry.get     via: '1.1 varnish',
22 silly registry.get     age: '0',
22 silly registry.get     connection: 'keep-alive',
22 silly registry.get     'x-served-by': 'cache-iad2141-IAD',
22 silly registry.get     'x-cache': 'MISS',
22 silly registry.get     'x-cache-hits': '0',
22 silly registry.get     'x-timer': 'S1433566868.765624,VS0,VE39',
22 silly registry.get     vary: 'Accept' } ]
23 silly addNameRange number 2 { name: 'mup', range: '*', hasData: true }
24 silly addNameRange versions [ 'mup',
24 silly addNameRange   [ '0.1.2',
24 silly addNameRange     '0.1.3',
24 silly addNameRange     '0.1.4',
24 silly addNameRange     '0.1.5',
24 silly addNameRange     '0.1.6',
24 silly addNameRange     '0.1.7',
24 silly addNameRange     '0.1.8',
24 silly addNameRange     '0.1.9',
24 silly addNameRange     '0.1.10',
24 silly addNameRange     '0.1.11',
24 silly addNameRange     '0.1.12',
24 silly addNameRange     '0.1.13',
24 silly addNameRange     '0.2.0',
24 silly addNameRange     '0.3.0',
24 silly addNameRange     '0.4.0',
24 silly addNameRange     '0.4.1',
24 silly addNameRange     '0.4.2',
24 silly addNameRange     '0.4.3',
24 silly addNameRange     '0.4.4',
24 silly addNameRange     '0.4.5',
24 silly addNameRange     '0.4.6',
24 silly addNameRange     '0.4.7',
24 silly addNameRange     '0.5.0',
24 silly addNameRange     '0.5.1',
24 silly addNameRange     '0.5.2',
24 silly addNameRange     '0.5.3',
24 silly addNameRange     '0.6.0',
24 silly addNameRange     '0.6.1',
24 silly addNameRange     '0.6.3',
24 silly addNameRange     '0.6.4',
24 silly addNameRange     '0.6.5',
24 silly addNameRange     '0.6.7',
24 silly addNameRange     '0.6.8',
24 silly addNameRange     '0.6.9',
24 silly addNameRange     '0.6.10',
24 silly addNameRange     '0.6.11',
24 silly addNameRange     '0.6.12',
24 silly addNameRange     '0.7.0',
24 silly addNameRange     '0.7.1',
24 silly addNameRange     '0.7.2',
24 silly addNameRange     '0.7.3',
24 silly addNameRange     '0.7.4',
24 silly addNameRange     '0.7.5',
24 silly addNameRange     '0.7.6',
24 silly addNameRange     '0.7.7',
24 silly addNameRange     '0.8.0',
24 silly addNameRange     '0.9.0',
24 silly addNameRange     '0.9.1',
24 silly addNameRange     '0.9.2',
24 silly addNameRange     '0.9.3',
24 silly addNameRange     '0.9.4',
24 silly addNameRange     '0.9.5',
24 silly addNameRange     '0.9.6',
24 silly addNameRange     '0.9.7',
24 silly addNameRange     '0.10.0',
24 silly addNameRange     '0.10.1',
24 silly addNameRange     '0.10.2',
24 silly addNameRange     '0.10.3',
24 silly addNameRange     '0.10.4',
24 silly addNameRange     '0.10.5',
24 silly addNameRange     '0.10.6',
24 silly addNameRange     '0.10.7' ] ]
25 verbose addNamed [ 'mup', '0.10.7' ]
26 verbose addNamed [ '0.10.7', '0.10.7' ]
27 silly lockFile 09a79fb6-mup-0-10-7 mup@0.10.7
28 verbose lock mup@0.10.7 /home/daniel/.npm/09a79fb6-mup-0-10-7.lock
29 silly lockFile 728a4967-try-npmjs-org-mup-mup-0-10-7-tgz https://registry.npmjs.org/mup/-/mup-0.10.7.tgz
30 verbose lock https://registry.npmjs.org/mup/-/mup-0.10.7.tgz /home/daniel/.npm/728a4967-try-npmjs-org-mup-mup-0-10-7-tgz.lock
31 verbose addRemoteTarball [ 'https://registry.npmjs.org/mup/-/mup-0.10.7.tgz',
31 verbose addRemoteTarball   'fea9a22b186cc685247ebc7f900435ff6ad32f7a' ]
32 info retry fetch attempt 1 at 01:01:09
33 verbose fetch to= /home/daniel/tmp/npm-7415-P4-6gDUZ/1433566869434-0.9903364658821374/tmp.tgz
34 http GET https://registry.npmjs.org/mup/-/mup-0.10.7.tgz
35 http 200 https://registry.npmjs.org/mup/-/mup-0.10.7.tgz
36 verbose tar unpack /home/daniel/tmp/npm-7415-P4-6gDUZ/1433566869434-0.9903364658821374/tmp.tgz
37 silly lockFile 2448ad91-69434-0-9903364658821374-package tar:///home/daniel/tmp/npm-7415-P4-6gDUZ/1433566869434-0.9903364658821374/package
38 verbose lock tar:///home/daniel/tmp/npm-7415-P4-6gDUZ/1433566869434-0.9903364658821374/package /home/daniel/.npm/2448ad91-69434-0-9903364658821374-package.lock
39 silly lockFile d813b57a-69434-0-9903364658821374-tmp-tgz tar:///home/daniel/tmp/npm-7415-P4-6gDUZ/1433566869434-0.9903364658821374/tmp.tgz
40 verbose lock tar:///home/daniel/tmp/npm-7415-P4-6gDUZ/1433566869434-0.9903364658821374/tmp.tgz /home/daniel/.npm/d813b57a-69434-0-9903364658821374-tmp-tgz.lock
41 silly gunzTarPerm modes [ '755', '644' ]
42 silly gunzTarPerm extractEntry package.json
43 silly gunzTarPerm extractEntry .npmignore
44 silly gunzTarPerm extractEntry README.md
45 silly gunzTarPerm extractEntry bin/mup
46 silly gunzTarPerm extractEntry example/mup.json
47 silly gunzTarPerm extractEntry example/settings.json
48 silly gunzTarPerm extractEntry lib/actions.js
49 silly gunzTarPerm extractEntry lib/build.js
50 silly gunzTarPerm extractEntry lib/config.js
51 silly gunzTarPerm extractEntry lib/helpers.js
52 silly gunzTarPerm extractEntry lib/taskLists/index.js
53 silly gunzTarPerm extractEntry lib/taskLists/linux.js
54 silly gunzTarPerm extractEntry lib/taskLists/sunos.js
55 silly gunzTarPerm extractEntry scripts/linux/install-mongodb.sh
56 silly gunzTarPerm extractEntry scripts/linux/install-node.sh
57 silly gunzTarPerm extractEntry scripts/linux/install-phantomjs.sh
58 silly gunzTarPerm extractEntry scripts/linux/install-stud.sh
59 silly gunzTarPerm extractEntry scripts/linux/setup-env.sh
60 silly gunzTarPerm extractEntry scripts/sunos/install-node.sh
61 silly gunzTarPerm extractEntry scripts/sunos/setup-env.sh
62 silly gunzTarPerm extractEntry templates/linux/deploy.sh
63 silly gunzTarPerm extractEntry templates/linux/env.sh
64 silly gunzTarPerm extractEntry templates/linux/meteor.conf
65 silly gunzTarPerm extractEntry templates/linux/mongodb.conf
66 silly gunzTarPerm extractEntry templates/linux/stud.conf
67 silly gunzTarPerm extractEntry templates/linux/stud.init.conf
68 silly gunzTarPerm extractEntry templates/sunos/deploy.sh
69 silly gunzTarPerm extractEntry templates/sunos/env.sh
70 silly gunzTarPerm extractEntry templates/sunos/run.sh
71 silly gunzTarPerm extractEntry templates/sunos/service-manifest.xml
72 silly lockFile 2448ad91-69434-0-9903364658821374-package tar:///home/daniel/tmp/npm-7415-P4-6gDUZ/1433566869434-0.9903364658821374/package
73 silly lockFile 2448ad91-69434-0-9903364658821374-package tar:///home/daniel/tmp/npm-7415-P4-6gDUZ/1433566869434-0.9903364658821374/package
74 silly lockFile d813b57a-69434-0-9903364658821374-tmp-tgz tar:///home/daniel/tmp/npm-7415-P4-6gDUZ/1433566869434-0.9903364658821374/tmp.tgz
75 silly lockFile d813b57a-69434-0-9903364658821374-tmp-tgz tar:///home/daniel/tmp/npm-7415-P4-6gDUZ/1433566869434-0.9903364658821374/tmp.tgz
76 verbose tar pack [ '/home/daniel/.npm/mup/0.10.7/package.tgz',
76 verbose tar pack   '/home/daniel/tmp/npm-7415-P4-6gDUZ/1433566869434-0.9903364658821374/package' ]
77 verbose tarball /home/daniel/.npm/mup/0.10.7/package.tgz
78 verbose folder /home/daniel/tmp/npm-7415-P4-6gDUZ/1433566869434-0.9903364658821374/package
79 silly lockFile 2448ad91-69434-0-9903364658821374-package tar:///home/daniel/tmp/npm-7415-P4-6gDUZ/1433566869434-0.9903364658821374/package
80 verbose lock tar:///home/daniel/tmp/npm-7415-P4-6gDUZ/1433566869434-0.9903364658821374/package /home/daniel/.npm/2448ad91-69434-0-9903364658821374-package.lock
81 silly lockFile e5c950c2-aniel-npm-mup-0-10-7-package-tgz tar:///home/daniel/.npm/mup/0.10.7/package.tgz
82 verbose lock tar:///home/daniel/.npm/mup/0.10.7/package.tgz /home/daniel/.npm/e5c950c2-aniel-npm-mup-0-10-7-package-tgz.lock
83 silly lockFile 2448ad91-69434-0-9903364658821374-package tar:///home/daniel/tmp/npm-7415-P4-6gDUZ/1433566869434-0.9903364658821374/package
84 silly lockFile 2448ad91-69434-0-9903364658821374-package tar:///home/daniel/tmp/npm-7415-P4-6gDUZ/1433566869434-0.9903364658821374/package
85 silly lockFile e5c950c2-aniel-npm-mup-0-10-7-package-tgz tar:///home/daniel/.npm/mup/0.10.7/package.tgz
86 silly lockFile e5c950c2-aniel-npm-mup-0-10-7-package-tgz tar:///home/daniel/.npm/mup/0.10.7/package.tgz
87 silly lockFile 20305d64-me-daniel-npm-mup-0-10-7-package /home/daniel/.npm/mup/0.10.7/package
88 verbose lock /home/daniel/.npm/mup/0.10.7/package /home/daniel/.npm/20305d64-me-daniel-npm-mup-0-10-7-package.lock
89 silly lockFile 20305d64-me-daniel-npm-mup-0-10-7-package /home/daniel/.npm/mup/0.10.7/package
90 silly lockFile 20305d64-me-daniel-npm-mup-0-10-7-package /home/daniel/.npm/mup/0.10.7/package
91 verbose tar unpack /home/daniel/.npm/mup/0.10.7/package.tgz
92 silly lockFile d71718a4-me-daniel-npm-mup-0-10-7-package tar:///home/daniel/.npm/mup/0.10.7/package
93 verbose lock tar:///home/daniel/.npm/mup/0.10.7/package /home/daniel/.npm/d71718a4-me-daniel-npm-mup-0-10-7-package.lock
94 silly lockFile e5c950c2-aniel-npm-mup-0-10-7-package-tgz tar:///home/daniel/.npm/mup/0.10.7/package.tgz
95 verbose lock tar:///home/daniel/.npm/mup/0.10.7/package.tgz /home/daniel/.npm/e5c950c2-aniel-npm-mup-0-10-7-package-tgz.lock
96 silly gunzTarPerm modes [ '755', '644' ]
97 silly gunzTarPerm extractEntry package.json
98 silly gunzTarPerm extractEntry .npmignore
99 silly gunzTarPerm extractEntry README.md
100 silly gunzTarPerm extractEntry bin/mup
101 silly gunzTarPerm extractEntry example/mup.json
102 silly gunzTarPerm extractEntry example/settings.json
103 silly gunzTarPerm extractEntry lib/actions.js
104 silly gunzTarPerm extractEntry lib/build.js
105 silly gunzTarPerm extractEntry lib/config.js
106 silly gunzTarPerm extractEntry lib/helpers.js
107 silly gunzTarPerm extractEntry lib/taskLists/index.js
108 silly gunzTarPerm extractEntry lib/taskLists/linux.js
109 silly gunzTarPerm extractEntry lib/taskLists/sunos.js
110 silly gunzTarPerm extractEntry scripts/linux/install-mongodb.sh
111 silly gunzTarPerm extractEntry scripts/linux/install-node.sh
112 silly gunzTarPerm extractEntry scripts/linux/install-phantomjs.sh
113 silly gunzTarPerm extractEntry scripts/linux/install-stud.sh
114 silly gunzTarPerm extractEntry scripts/linux/setup-env.sh
115 silly gunzTarPerm extractEntry scripts/sunos/install-node.sh
116 silly gunzTarPerm extractEntry scripts/sunos/setup-env.sh
117 silly gunzTarPerm extractEntry templates/linux/deploy.sh
118 silly gunzTarPerm extractEntry templates/linux/env.sh
119 silly gunzTarPerm extractEntry templates/linux/meteor.conf
120 silly gunzTarPerm extractEntry templates/linux/mongodb.conf
121 silly gunzTarPerm extractEntry templates/linux/stud.conf
122 silly gunzTarPerm extractEntry templates/linux/stud.init.conf
123 silly gunzTarPerm extractEntry templates/sunos/deploy.sh
124 silly gunzTarPerm extractEntry templates/sunos/env.sh
125 silly gunzTarPerm extractEntry templates/sunos/run.sh
126 silly gunzTarPerm extractEntry templates/sunos/service-manifest.xml
127 silly lockFile d71718a4-me-daniel-npm-mup-0-10-7-package tar:///home/daniel/.npm/mup/0.10.7/package
128 silly lockFile d71718a4-me-daniel-npm-mup-0-10-7-package tar:///home/daniel/.npm/mup/0.10.7/package
129 silly lockFile e5c950c2-aniel-npm-mup-0-10-7-package-tgz tar:///home/daniel/.npm/mup/0.10.7/package.tgz
130 silly lockFile e5c950c2-aniel-npm-mup-0-10-7-package-tgz tar:///home/daniel/.npm/mup/0.10.7/package.tgz
131 verbose chmod /home/daniel/.npm/mup/0.10.7/package.tgz 644
132 verbose chown /home/daniel/.npm/mup/0.10.7/package.tgz [ 1000, 1000 ]
133 silly lockFile 728a4967-try-npmjs-org-mup-mup-0-10-7-tgz https://registry.npmjs.org/mup/-/mup-0.10.7.tgz
134 silly lockFile 728a4967-try-npmjs-org-mup-mup-0-10-7-tgz https://registry.npmjs.org/mup/-/mup-0.10.7.tgz
135 silly lockFile 09a79fb6-mup-0-10-7 mup@0.10.7
136 silly lockFile 09a79fb6-mup-0-10-7 mup@0.10.7
137 silly lockFile 49f77549-mup mup@
138 silly lockFile 49f77549-mup mup@
139 silly resolved [ { name: 'mup',
139 silly resolved     version: '0.10.7',
139 silly resolved     description: 'Production Quality Meteor Deployments',
139 silly resolved     dependencies:
139 silly resolved      { async: '^0.9.0',
139 silly resolved        cjson: '0.3.x',
139 silly resolved        colors: '0.6.x',
139 silly resolved        nodemiral: '^1.0.1',
139 silly resolved        rimraf: '2.x.x',
139 silly resolved        underscore: '1.7.0',
139 silly resolved        uuid: '1.4.x',
139 silly resolved        archiver: '0.14.x' },
139 silly resolved     bin: { mup: './bin/mup' },
139 silly resolved     author:
139 silly resolved      { name: 'Arunoda Susiripala',
139 silly resolved        email: 'arunoda.susiripala@gmail.com' },
139 silly resolved     repository: { type: 'git', url: 'git://github.com/arunoda/meteor-up.git' },
139 silly resolved     license: 'MIT',
139 silly resolved     readme: '# Meteor Up\n\n#### Production Quality Meteor Deployments\n\nMeteor Up (mup for short) is a command line tool that allows you to deploy any [Meteor](http://meteor.com) app to your own server. It supports only Debian/Ubuntu flavours and Open Solaris at the moments. (PRs are welcome)\n\nYou can use install and use Meteor Up from Linux, Mac and Windows.\n\n> Screencast: [How to deploy a Meteor app with Meteor Up (by Sacha Greif)](https://www.youtube.com/watch?v=WLGdXtZMmiI)\n\n**Table of Contents**\n\n- [Features](#features)\n- [Server Configuration](#server-configuration)\n- [Installation](#installation)\n- [Creating a Meteor Up Project](#creating-a-meteor-up-project)\n- [Example File](#example-file)\n- [Setting Up a Server](#setting-up-a-server)\n- [Deploying an App](#deploying-an-app)\n- [Additional Setup/Deploy Information](#additional-setupdeploy-information)\n    - [Server Setup Details](#server-setup-details)\n    - [Deploy Wait Time](#deploy-wait-time)\n    - [Multiple Deployment Targets](#multiple-deployment-targets)\n- [Access Logs](#access-logs)\n- [Reconfiguring & Restarting](#reconfiguring--restarting)\n- [Accessing the Database](#accessing-the-database)\n- [Multiple Deployments](#multiple-deployments)\n- [Server Specific Environment Variables](#server-specific-environment-variables)\n- [SSL Support](#ssl-support)\n- [Updating](#updating)\n- [Troubleshooting](#troubleshooting)\n- [Binary Npm Module Support](#binary-npm-module-support)\n- [Additional Resources](#additional-resources)\n\n### Features\n\n* Single command server setup\n* Single command deployment\n* Multi server deployment\n* Environmental Variables management\n* Support for [`settings.json`](http://docs.meteor.com/#meteor_settings)\n* Password or Private Key(pem) based server authentication\n* Access, logs from the terminal (supports log tailing)\n* Support for multiple meteor deployments (experimental)\n\n### Server Configuration\n\n* Auto-Restart if the app crashed (using forever)\n* Auto-Start after the server reboot (using upstart)\n* Stepdown User Privileges\n* Revert to the previous version, if the deployment failed\n* Secured MongoDB Installation (Optional)\n* Pre-Installed PhantomJS (Optional)\n\n### Installation\n\n    npm install -g mup\n\n### Creating a Meteor Up Project\n\n    mkdir ~/my-meteor-deployment\n    cd ~/my-meteor-deployment\n    mup init\n\nThis will create two files in your Meteor Up project directory:\n\n  * mup.json - Meteor Up configuration file\n  * settings.json - Settings for Meteor\'s [settings API](http://docs.meteor.com/#meteor_settings)\n\n`mup.json` is commented and easy to follow (it supports JavaScript comments).\n\n### Example File\n\n```js\n{\n  // Server authentication info\n  "servers": [\n    {\n      "host": "hostname",\n      "username": "root",\n      "password": "password"\n      // or pem file (ssh based authentication)\n      // WARNING: Keys protected by a passphrase are not supported\n      //"pem": "~/.ssh/id_rsa"\n      // Also, for non-standard ssh port use this\n      //"sshOptions": { "port" : 49154 },\n      // server specific environment variables\n      "env": {}\n    }\n  ],\n\n  // Install MongoDB on the server. Does not destroy the local MongoDB on future setups\n  "setupMongo": true,\n\n  // WARNING: Node.js is required! Only skip if you already have Node.js installed on server.\n  "setupNode": true,\n\n  // WARNING: nodeVersion defaults to 0.10.36 if omitted. Do not use v, just the version number.\n  "nodeVersion": "0.10.36",\n\n  // Install PhantomJS on the server\n  "setupPhantom": true,\n\n  // Show a progress bar during the upload of the bundle to the server. \n  // Might cause an error in some rare cases if set to true, for instance in Shippable CI\n  "enableUploadProgressBar": true,\n\n  // Application name (no spaces).\n  "appName": "meteor",\n\n  // Location of app (local directory). This can reference \'~\' as the users home directory.\n  // i.e., "app": "~/Meteor/my-app",\n  // This is the same as the line below.\n  "app": "/Users/arunoda/Meteor/my-app",\n\n  // Configure environment\n  // ROOT_URL must be set to https://YOURDOMAIN.com when using the spiderable package & force SSL\n  // your NGINX proxy or Cloudflare. When using just Meteor on SSL without spiderable this is not necessary\n  "env": {\n    "PORT": 80,\n    "ROOT_URL": "http://myapp.com",\n    "MONGO_URL": "mongodb://arunoda:fd8dsjsfh7@hanso.mongohq.com:10023/MyApp",\n    "MAIL_URL": "smtp://postmaster%40myapp.mailgun.org:adj87sjhd7s@smtp.mailgun.org:587/"\n  },\n\n  // Meteor Up checks if the app comes online just after the deployment.\n  // Before mup checks that, it will wait for the number of seconds configured below.\n  "deployCheckWaitTime": 15\n}\n```\n\n### Setting Up a Server\n\n    mup setup\n\nThis will setup the server for the `mup` deployments. It will take around 2-5 minutes depending on the server\'s performance and network availability.\n\n### Deploying an App\n\n    mup deploy\n\nThis will bundle the Meteor project and deploy it to the server.\n\n### Additional Setup/Deploy Information\n\n#### Deploy Wait Time\n\nMeteor Up checks if the deployment is successful or not just after the deployment. By default, it will wait 10 seconds before the check. You can configure the wait time with the `deployCheckWaitTime` option in the `mup.json`\n\n#### Ssh based authentication with `sudo`\n\n**If your username is `root`, you don\'t need to follow these steps**\n\nPlease ensure your key file (pem) is not protected by a passphrase. Also the setup process will require NOPASSWD access to sudo. (Since Meteor needs port 80, sudo access is required.)\n\nMake sure you also add your ssh key to the ```/YOUR_USERNAME/.ssh/authorized_keys``` list\n\nYou can add your user to the sudo group:\n\n    sudo adduser *username*  sudo\n\nAnd you also need to add NOPASSWD to the sudoers file:\n\n    sudo visudo\n\n    # replace this line\n    %sudo  ALL=(ALL) ALL\n\n    # by this line\n    %sudo ALL=(ALL) NOPASSWD:ALL  \n\nWhen this process is not working you might encounter the following error:\n\n    \'sudo: no tty present and no askpass program specified\'\n\n#### Server Setup Details\n\nThis is how Meteor Up will configure the server for you based on the given `appName` or using "meteor" as default appName. This information will help you customize the server for your needs.\n\n* your app lives at `/opt/<appName>/app`\n* mup uses `upstart` with a config file at `/etc/init/<appName>.conf`\n* you can start and stop the app with upstart: `start <appName>` and `stop <appName>`\n* logs are located at: `/var/log/upstart/<appName>.log`\n* MongoDB installed and bound to the local interface (cannot access from the outside)\n* the database is named `<appName>`\n\nFor more information see [`lib/taskLists.js`](https://github.com/arunoda/meteor-up/blob/master/lib/taskLists.js).\n\n#### Multiple Deployment Targets\n\nYou can use an array to deploy to multiple servers at once.\n\nTo deploy to *different* environments (e.g. staging, production, etc.), use separate Meteor Up configurations in separate directories, with each directory containing separate `mup.json` and `settings.json` files, and the `mup.json` files\' `app` field pointing back to your app\'s local directory.\n\n#### Custom Meteor Binary\n\nSometimes, you might be using `mrt`, or Meteor from a git checkout. By default, Meteor Up uses `meteor`. You can ask Meteor Up to use the correct binary with the `meteorBinary` option.\n\n~~~js\n{\n  ...\n  "meteorBinary": "~/bin/meteor/meteor"\n  ...\n}\n~~~\n\n### Access Logs\n\n    mup logs -f\n\nMup can tail logs from the server and supports all the options of `tail`.\n\n### Reconfiguring & Restarting\n\nAfter you\'ve edit environmental variables or `settings.json`, you can reconfigure the app without deploying again. Use the following command to do update the settings and restart the app.\n\n    mup reconfig\n\nIf you want to stop, start or restart your app for any reason, you can use the following commands to manage it.\n\n    mup stop\n    mup start\n    mup restart\n\n### Accessing the Database\n\nYou can\'t access the MongoDB from the outside the server. To access the MongoDB shell you need to log into your server via SSH first and then run the following command:\n\n    mongo appName\n\n### Server Specific Environment Variables\n\nIt is possible to provide server specific environment variables. Add the `env` object along with the server details in the `mup.json`. Here\'s an example:\n\n~~~js\n{\n  "servers": [\n    {\n      "host": "hostname",\n      "username": "root",\n      "password": "password"\n      "env": {\n        "SOME_ENV": "the-value"\n      }\n    }\n\n  ...\n}\n~~~\n\nBy default, Meteor UP adds `CLUSTER_ENDPOINT_URL` to make [cluster](https://github.com/meteorhacks/cluster) deployment simple. But you can override it by defining it yourself.\n\n### Multiple Deployments\n\nMeteor Up supports multiple deployments to a single server. Meteor Up only does the deployment; if you need to configure subdomains, you need to manually setup a reverse proxy yourself.\n\nLet\'s assume, we need to deploy production and staging versions of the app to the same server. The production app runs on port 80 and the staging app runs on port 8000.\n\nWe need to have two separate Meteor Up projects. For that, create two directories and initialize Meteor Up and add the necessary configurations.\n\nIn the staging `mup.json`, add a field called `appName` with the value `staging`. You can add any name you prefer instead of `staging`. Since we are running our staging app on port 8000, add an environment variable called `PORT` with the value 8000.\n\nNow setup both projects and deploy as you need.\n\n### SSL Support\n\nMeteor Up has the built in SSL support. It uses [stud](https://github.com/bumptech/stud) SSL terminator for that. First you need to get a SSL certificate from some provider. This is how to do that:\n\n* [First you need to generate a CSR file and the private key](http://www.rackspace.com/knowledge_center/article/generate-a-csr-with-openssl)\n* Then purchase a SSL certificate.\n* Then generate a SSL certificate from your SSL providers UI.\n* Then that\'ll ask to provide the CSR file. Upload the CSR file we\'ve generated.\n* When asked to select your SSL server type, select it as nginx.\n* Then you\'ll get a set of files (your domain certificate and CA files).\n\nNow you need combine SSL certificate(s) with the private key and save it in the mup config directory as `ssl.pem`. Check this [guide](http://alexnj.com/blog/configuring-a-positivessl-certificate-with-stud.html) to do that.\n\nThen add following configuration to your `mup.json` file.\n\n~~~js\n{\n  ...\n\n  "ssl": {\n    "pem": "./ssl.pem",\n    //"backendPort": 80\n  }\n\n  ...\n}\n~~~\n\nNow, simply do `mup setup` and now you\'ve the SSL support.\n\n> * By default, it\'ll think your Meteor app is running on port 80. If it\'s not, change it with the `backendPort` configuration field.\n> * SSL terminator will run on the default SSL port `443`\n> * If you are using multiple servers, SSL terminators will run on the each server (This is made to work with [cluster](https://github.com/meteorhacks/cluster))\n> * Right now, you can\'t have multiple SSL terminators running inside a single server\n\n### Updating\n\nTo update `mup` to the latest version, just type:\n\n    npm update mup -g\n\nYou should try and keep `mup` up to date in order to keep up with the latest Meteor changes. But note that if you need to update your Node version, you\'ll have to run `mup setup` again before deploying.\n\n### Troubleshooting\n\n#### Check Logs\nIf you suddenly can\'t deploy your app anymore, first use the `mup logs -f` command to check the logs for error messages.\n\nOne of the most common problems is your Node version getting out of date. In that case, see “Updating” section above.\n\n#### Verbose Output\nIf you need to see the output of `meteor-up` (to see more precisely where it\'s failing or hanging, for example), run it like so:\n\n    DEBUG=* mup <command>\n\nwhere `<command>` is one of the `mup` commands such as `setup`, `deploy`, etc.\n\n### Binary Npm Module Support\n\nSome of the Meteor core packages as well some of the community packages comes with npm modules which has been written in `C` or `C++`. These modules are platform dependent.\nSo, we need to do special handling, before running the bundle generated from `meteor bundle`.\n(meteor up uses the meteor bundle)\n\nFortunately, Meteor Up **will take care** of that job for you and it will detect binary npm modules and re-build them before running your app on the given server.\n\n> * Meteor 0.9 adds a similar feature where it allows package developers to publish their packages for different architecures, if their packages has binary npm modules.\n> * As a side effect of that, if you are using a binary npm module inside your app via `meteorhacks:npm` package, you won\'t be able to deploy into `*.meteor.com`.\n> * But, you\'ll be able to deploy with Meteor Up since we are re-building binary modules on the server.\n\n### Additional Resources\n\n* [Using Meteor Up with Nitrous.io](https://github.com/arunoda/meteor-up/wiki/Using-Meteor-Up-with-Nitrous.io)\n* [Change Ownership of Additional Directories](https://github.com/arunoda/meteor-up/wiki/Change-Ownership-of-Additional-Directories)\n* [Using Meteor Up with NginX vhosts](https://github.com/arunoda/meteor-up/wiki/Using-Meteor-Up-with-NginX-vhosts)\n',
139 silly resolved     readmeFilename: 'README.md',
139 silly resolved     bugs: { url: 'https://github.com/arunoda/meteor-up/issues' },
139 silly resolved     _id: 'mup@0.10.7',
139 silly resolved     dist: { shasum: '66a6d40b15474e61ab7586a2038481c25170c394' },
139 silly resolved     _from: 'mup@',
139 silly resolved     _resolved: 'https://registry.npmjs.org/mup/-/mup-0.10.7.tgz' } ]
140 info install mup@0.10.7 into /usr/local/lib
141 info installOne mup@0.10.7
142 info /usr/local/lib/node_modules/mup unbuild
143 verbose tar unpack /home/daniel/.npm/mup/0.10.7/package.tgz
144 silly lockFile de4b26ee-r-usr-local-lib-node-modules-mup tar:///usr/local/lib/node_modules/mup
145 verbose lock tar:///usr/local/lib/node_modules/mup /home/daniel/.npm/de4b26ee-r-usr-local-lib-node-modules-mup.lock
146 silly lockFile e5c950c2-aniel-npm-mup-0-10-7-package-tgz tar:///home/daniel/.npm/mup/0.10.7/package.tgz
147 verbose lock tar:///home/daniel/.npm/mup/0.10.7/package.tgz /home/daniel/.npm/e5c950c2-aniel-npm-mup-0-10-7-package-tgz.lock
148 silly gunzTarPerm modes [ '755', '644' ]
149 error Error: EACCES, mkdir '/usr/local/lib/node_modules/mup'
149 error  { [Error: EACCES, mkdir '/usr/local/lib/node_modules/mup']
149 error   errno: 3,
149 error   code: 'EACCES',
149 error   path: '/usr/local/lib/node_modules/mup',
149 error   fstream_type: 'Directory',
149 error   fstream_path: '/usr/local/lib/node_modules/mup',
149 error   fstream_class: 'DirWriter',
149 error   fstream_stack:
149 error    [ '/usr/lib/nodejs/fstream/lib/dir-writer.js:36:23',
149 error      '/usr/lib/nodejs/mkdirp/index.js:37:53',
149 error      'Object.oncomplete (fs.js:107:15)' ] }
150 error Please try running this command again as root/Administrator.
151 error System Linux 3.16.0-38-generic
152 error command "/usr/bin/nodejs" "/usr/bin/npm" "install" "-g" "mup"
153 error cwd /home/daniel/app attempts/Discover Meteor
154 error node -v v0.10.25
155 error npm -v 1.3.10
156 error path /usr/local/lib/node_modules/mup
157 error fstream_path /usr/local/lib/node_modules/mup
158 error fstream_type Directory
159 error fstream_class DirWriter
160 error code EACCES
161 error errno 3
162 error stack Error: EACCES, mkdir '/usr/local/lib/node_modules/mup'
163 error fstream_stack /usr/lib/nodejs/fstream/lib/dir-writer.js:36:23
163 error fstream_stack /usr/lib/nodejs/mkdirp/index.js:37:53
163 error fstream_stack Object.oncomplete (fs.js:107:15)
164 verbose exit [ 3, true ]
